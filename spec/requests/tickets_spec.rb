require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe 'Tickets API', type: :request do
  let(:user) { User.create!(email: 'user@example.com', password: 'password') }
  let(:admin) { User.create!(email: 'admin@example.com', password: 'password', role: 'admin') }
  let(:valid_attributes) { { name: 'Issue 1', description: 'Some description' } }

  describe 'POST /tickets' do
    it 'allows regular user to create a ticket' do
      sign_in user
      post tickets_path, params: { ticket: valid_attributes }
      expect(response).to have_http_status(:created)
    end
  end

  describe 'GET /tickets' do
    it 'denies regular users from viewing all tickets' do
      sign_in user
      get tickets_path
      expect(response).to have_http_status(:forbidden)
    end

    it 'allows admin to view all tickets' do
      sign_in admin
      get tickets_path
      expect(response).to have_http_status(:ok)
    end
  end
end